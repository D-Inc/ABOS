buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7"
group= "com.ninjawarrior1337.abos" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "abos"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

repositories {
    mavenLocal()
    maven {
        name "ChickenBones"
        url "http://chickenbones.net/maven/"
    }

    maven {
        name "Mobius"
        url "http://mobiusstrip.eu/maven"
    }

    maven {
        name "FireBall API Depot"
        url "http://dl.tsr.me/artifactory/libs-release-local"
    }

    maven {
        name = "Player"
        url = "http://maven.ic2.player.to/"
    }

    maven {
        name = "Tterrag"
        url = "http://maven.tterrag.com/"
    }

    maven  {
        name = "RX14 Proxy"
        url = "http://mvn.rx14.co.uk/repo/"
    }

    maven {
        name "OpenComputers Repo"
        url = "http://maven.cil.li/"
    }

    maven {
        name = "MM repo"
        url = "http://maven.k-4u.nl/"
    }

    ivy {
        name "BuildCraft"
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
}

dependencies {
    compile "appeng:appliedenergistics2:rv3-beta-6:dev"
    compile "appeng:appliedenergistics2:rv3-beta-6:api"
	
    compile "codechicken:ForgeMultipart:${minecraft_version}-${fmp_version}:dev"
    compile "codechicken:CodeChickenLib:${minecraft_version}-${code_chicken_lib_version}:dev"
    compile "codechicken:CodeChickenCore:${minecraft_version}-${code_chicken_core_version}:dev"
    compile "codechicken:NotEnoughItems:${minecraft_version}-${nei_version}:dev"
    compile "com.mod-buildcraft:buildcraft:${bc_version}:dev"
    compile "pneumaticCraft:PneumaticCraft-${minecraft_version}:${pneumaticcraft_version}:api"

    // provided APIs
    compile "li.cil.oc:OpenComputers:MC${minecraft_version}-${opencomputers_version}:api"
    compile "net.industrial-craft:industrialcraft-2:${ic2_version}-experimental:api"
    compile "net.mcft.copy.betterstorage:BetterStorage:${minecraft_version}-${betterstorage_version}:api"

    // self compiled APIs
    compile "appeng:Waila:${waila_version}_${minecraft_version}:api"
    compile "appeng:RotaryCraft:${rotarycraft_version}:api"
    compile "appeng:mekanism:${minecraft_version}-${mekansim_version}:api"
    compile "appeng:InventoryTweaks:${invtweaks_version}:api"

    // self compiled stubs
    compile(group: 'api', name: 'coloredlightscore', version: "${api_coloredlightscore_version}")
    compile(group: 'api', name: 'craftguide', version: "${api_craftguide_version}")
    compile(group: 'api', name: 'immibis', version: "${api_immibis_version}")
    compile(group: 'api', name: 'mfr', version: "${api_mfr_version}")
    compile(group: 'api', name: 'railcraft', version: "${api_railcraft_version}")
    compile(group: 'api', name: 'rf', version: "${api_rf_version}")

    testCompile "junit:junit:4.12"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
